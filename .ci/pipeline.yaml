---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: revision
      description: |
        the git revision/commit to update the git HEAD to.
        Default is to mean only use the branch
    - name: origin
      description: origin to merge the code with
    - name: statuses-repo-url
      description: the base repository's status URL
    - name: pipeline-debug
      description: Pipeline debug ("verbose") mode
      default: "0"
    - name: pr-number
      description: the number of the pull request
    - name: target-branch
      description: target branch
    - name: base-commit

  workspaces:
    - name: artifacts

  tasks:
    - name: git-get-credentials
      taskRef:
        name: git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: repository
          value: "https://github.ibm.com/one-pipeline/compliance-cd-toolchain.git"

    - name: clone-repo
      taskRef:
        name: git-clone
      runAfter:
        - git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.target-branch)
        - name: directory-name
          value: "compliance-cd-toolchain"
        - name: git-user
          value: $(tasks.git-get-credentials.results.git-auth-user)

    - name: setup-repo
      runAfter:
        - clone-repo
      taskRef:
        name: util-run
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: script
          value:
            |
            cd /scripts/compliance-cd-toolchain;
            git config --global user.email "tekton@example.com"
            git config --global user.name "Tekton"
            git merge origin/$(params.branch) --no-ff

      workspaces:
        - name: scripts
          workspace: artifacts

    - name: yaml-lint-github-status-pending
      taskRef:
        name: github-set-status
      runAfter:
        - git-get-credentials
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.statuses-repo-url)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: pending
        - name: context
          value: Tekton YAML Lint
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: description
          value: Tekton Yaml Lint

    - name: yaml-lint
      taskRef:
        name: yaml-lint
      runAfter:
        - setup-repo
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: rules
          value: "/artifacts/compliance-cd-toolchain/yamllint-rules.yaml"
        - name: path
          value: "/artifacts/compliance-cd-toolchain"
        - name: strict-mode
          value: "false"

    - name: yaml-lint-github-status-result
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.statuses-repo-url)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: $(tasks.yaml-lint.results.status)
        - name: context
          value: Tekton YAML Lint
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: description
          value: Tekton Yaml Lint

    - name: tekton-lint-github-status-pending
      taskRef:
        name: github-set-status
      runAfter:
        - git-get-credentials
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.statuses-repo-url)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: pending
        - name: context
          value: Tekton
        - name: description
          value: Running Tekton Linter...
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: tekton-lint
      taskRef:
        name: lint-pipeline
      workspaces:
        - name: artifacts
          workspace: artifacts
      runAfter:
        - yaml-lint
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: tekton-lint-github-status-result
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.statuses-repo-url)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: $(tasks.tekton-lint.results.status)
        - name: context
          value: Tekton
        - name: description
          value: Running Tekton Linter...
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: check-pr-github-status-pending
      runAfter:
        - git-get-credentials
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.statuses-repo-url)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: "pending"
        - name: context
          value: tekton/check-pr
        - name: description
          value: PR Checker Script started.
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: pr-check
      runAfter:
        - tekton-lint
      taskRef:
        name: check-pull-request
      params:
        - name: branch
          value: $(params.branch)
        - name: target-branch
          value: $(params.target-branch)
        - name: pr-number
          value: $(params.pr-number)
        - name: github-user
          value: $(tasks.git-get-credentials.results.git-auth-user)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: directory-name
          value: $(tasks.clone-repo.results.directory-name)
        - name: to-commit
          value: $(params.revision)
        - name: from-commit
          value: $(params.base-commit)
        - name: repo-url
          value: $(tasks.clone-repo.results.git-url)
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts

    - name: pr-checks-github-status-result
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.statuses-repo-url)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: $(tasks.pr-check.results.status)
        - name: context
          value: tekton/check-pr
        - name: description
          value: PR Checker Script finished.
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: code-pipeline-evaluator
      runAfter:
        - tekton-lint
      taskRef:
        name: util-evaluate-pipeline-results
      params:
        - name: results
          value: |
            [
              {
                "name": "yaml-lint",
                "expected": "success",
                "actual": "$(tasks.yaml-lint.results.status)"
              },
              {
                "name": "tekton-lint",
                "expected": "success",
                "actual": "$(tasks.tekton-lint.results.status)"
              },
              {
                "name": "pr-check",
                "expected": "success",
                "actual": "$(tasks.pr-check.results.status)"
              }
            ]
