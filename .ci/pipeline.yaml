---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: revision
      description: |
        the git revision/commit to update the git HEAD to.
        Default is to mean only use the branch
    - name: pipeline-debug
      description: Pipeline debug ("verbose") mode
      default: "0"

  workspaces:
    - name: artifacts

  tasks:
    - name: git-get-credentials
      taskRef:
        name: git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: repository
          value: $(params.repository)

    - name: clone-repo
      taskRef:
        name: git-clone
      runAfter:
        - git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: directory-name
          value: "compliance-cd-toolchain"
        - name: git-user
          value: $(tasks.git-get-credentials.results.git-auth-user)

    - name: clone-common-tasks
      taskRef:
        name: git-clone
      runAfter:
        - git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: repository
          value: "https://github.ibm.com/one-pipeline/common-tekton-tasks"
        - name: branch
          value: "master"
        - name: directory-name
          value: "common-tekton-tasks"
        - name: git-user
          value: $(tasks.git-get-credentials.results.git-auth-user)

    - name: yaml-lint-github-status-pending
      taskRef:
        name: github-set-status
      runAfter:
        - git-get-credentials
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: pending
        - name: context
          value: Tekton YAML Lint
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: description
          value: Tekton Yaml Lint

    - name: yaml-lint
      taskRef:
        name: yaml-lint
      runAfter:
        - clone-common-tasks
        - clone-repo
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: rules
          value: "/artifacts/compliance-cd-toolchain/yamllint-rules.yaml"
        - name: path
          value: "/artifacts/compliance-cd-toolchain"
        - name: strict-mode
          value: "false"

    - name: yaml-lint-github-status-result
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: $(tasks.yaml-lint.results.status)
        - name: context
          value: Tekton YAML Lint
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: description
          value: Tekton Yaml Lint

    - name: tekton-lint-github-status-pending
      taskRef:
        name: github-set-status
      runAfter:
        - git-get-credentials
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: pending
        - name: context
          value: Tekton
        - name: description
          value: Running Tekton Linter...
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: tekton-lint
      taskRef:
        name: tekton-lint
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      runAfter:
        - yaml-lint
      params:
        - name: definitions
          value: |
            compliance-ci-toolchain/.tekton/**/*.yaml
            common-tekton-tasks/preview/*/*.yaml
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: tekton-lint-github-status-result
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.revision)
        - name: state
          value: $(tasks.tekton-lint.results.status)
        - name: context
          value: Tekton
        - name: description
          value: Running Tekton Linter...
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: code-pipeline-evaluator
      runAfter:
        - tekton-lint
      taskRef:
        name: util-evaluate-pipeline-results
      params:
        - name: results
          value: |
            [
              {
                "name": "yaml-lint",
                "expected": "success",
                "actual": "$(tasks.yaml-lint.results.status)"
              },
              {
                "name": "tekton-lint",
                "expected": "success",
                "actual": "$(tasks.tekton-lint.results.status)"
              }
            ]
