---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: clone-image
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc - this is where the cloned repository will be store

  steps:

    - name: clone
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/bin/bash
          export INVENTORY_REPO=$(jq -r '.services[] | select(.toolchain_binding.name=="inventory-repo")
          | .parameters.owner_id + "/" + .parameters.repo_name' /cd-config/toolchain.json)

          export APPLICATION_REPO=$(jq -r '.services[] | select(.toolchain_binding.name=="application-repo")
          | .parameters.repo_name' /cd-config/toolchain.json)
          echo "url: $INVENTORY_REPO"

          DEPLOYMENT=${APPLICATION_REPO}_us-south_prod
          echo $DEPLOYMENT

          git config --global user.email "tekton@pipeline.com"
          git config --global user.name "Tekton"

          git clone "https://$GHE_TOKEN@github.ibm.com/$INVENTORY_REPO.git"

          IMAGE=$(cat $DEPLOYMENT)
          echo $IMAGE
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
          - key: toolchain.json
            path: toolchain.json
